<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NotAllFieldsArePresent" xml:space="preserve">
    <value>Reihe {0}: Nicht alle Felder vorhanden, erwartete Anzahl ist {1}, tatsächliche Anzahl ist {2}.</value>
  </data>
  <data name="ObjectInTrainHasWrongTimingEndStartionIsBeforeStartStation" xml:space="preserve">
    <value>Reihe {0}: Objekt '{1}' in Zug {2} hat falsches Timing. Ankunft {3} ist vor Abflug {4}.</value>
  </data>
  <data name="ObjectAtStationWithDepartureDoNotRefersToAnExistingTimeInTrain" xml:space="preserve">
    <value>Reihe {0}: Objekt '{1}' am Bahnhof {2} mit Abfahrt {3} verweist auf eine nicht existierende Zeit in Zug {4}.</value>
  </data>
  <data name="ObjectAtStationWithArrivalDoNotRefersToAnExistingTimeInTrain" xml:space="preserve">
    <value>Reihe {0}: Objekt '{1}' am Bahnhof {2} mit Ankunft {3} verweist auf eine nicht existierende Zeit in Zug {4}.</value>
  </data>
  <data name="FeatureIsNotSupported" xml:space="preserve">
    <value>Funktion {0} wird nicht unterstützt.</value>
  </data>
  <data name="UseLoco" xml:space="preserve">
    <value>Benutze Lok {0}.</value>
  </data>
  <data name="UseLocoClasses" xml:space="preserve">
    <value>Benutze Lok {0}, Klasse {1}.</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warnung</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="CannotReadScheduleDueToErrorsInTimetable" xml:space="preserve">
    <value>Umlaufpläne können aufgrund von Fehlern im Fahrplan nicht gelesen werden.</value>
  </data>
  <data name="CannotReadTimetableDueToErrorsInLayout" xml:space="preserve">
    <value>Fahrpläne kann wegen Fehlern im Layout nicht gelesen werden.</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="TrainHasNoCallsAtStation" xml:space="preserve">
    <value>Reihe {0}: Zug {1} passiert Bahnhof {2} nicht.</value>
  </data>
  <data name="TrainHasOverlappingTimesAtStation" xml:space="preserve">
    <value>Reihe {0}: Zug {1} hat sich überschneidende Zeiten bei {2}.</value>
  </data>
  <data name="UnsupportedType" xml:space="preserve">
    <value>Reihe {0}: Type {1} wird nicht unterstützt. Bitte wenden Sie sich an den Entwickler, wenn Ihnen ein Typ fehlt.</value>
  </data>
  <data name="WorksheetNotFound" xml:space="preserve">
    <value>Arbeitsblatt {0} nicht gefunden.</value>
  </data>
  <data name="ColumnMustHaveAValue" xml:space="preserve">
    <value>Reihe {0}: Spalte {1} muss einen Wert enthalten.</value>
  </data>
  <data name="UnsupportedSubType" xml:space="preserve">
    <value>Reihe {0}: SypType {1} wird nicht unterstützt. Bitte wenden Sie sich an den Entwickler, wenn Ihnen ein Typ fehlt.</value>
  </data>
  <data name="ColumnMustBeANumber" xml:space="preserve">
    <value>Reihe {0}: Spalte {1} muss eine Zahl enthalten, aktueller Wert ist {2}.</value>
  </data>
  <data name="ColumnIsNotSpecified" xml:space="preserve">
    <value>Reihe {0}: Spalte {1} ist nicht angegeben.</value>
  </data>
  <data name="ColumnMustBeATime" xml:space="preserve">
    <value>Reihe {0}: Spalte {1} muss eine Zeit sein, aktueller Wert ist {2}.</value>
  </data>
  <data name="TrainHasNoCalls" xml:space="preserve">
    <value>Reihe {0}: Zug {1} hat keine Zeiten an der Station.</value>
  </data>
  <data name="StationNotFoundInLayout" xml:space="preserve">
    <value>Reihe {0}: Station '{1}' im aktuellen Layout nicht gefunden.</value>
  </data>
  <data name="RouteNotFoundInLayout" xml:space="preserve">
    <value>Reihe {0}: Route „{1}“ im aktuellen Layout nicht gefunden.</value>
  </data>
</root>